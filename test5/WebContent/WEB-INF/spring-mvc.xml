<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
		>
	<!--会自动注册DefaultAnnotationHandlerMapping与
 	AnnotationMethodHandlerAdapter 两个bean,
 	是spring MVC为@Controllers分发请求所必须的  -->
 	<mvc:annotation-driven/>
 	
 	<!--servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404
	加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容  -->
 	<mvc:default-servlet-handler/>
 	
 	<!-- 自动扫描注解且只扫描@Controller -->
 	<context:component-scan base-package="com.shop">
 		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
 	</context:component-scan>
 	
 	<!--配置静态资源  -->
 	<!--location元素表示webapp目录下的static包下的所有文件；
	mapping元素表示以/static开头的所有请求路径，如/static/a 或者/static/a/b；
	该配置的作用是：DispatcherServlet不会拦截以/static开头的所有请求路径，并当作静态资源
	交由Servlet处理  -->
 	<mvc:resources location="/static/" mapping="/static/**"/>
 	
 	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" />
	
	<!-- 使用annotation定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>